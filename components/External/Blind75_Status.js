export const BLIND75_STATUS = {
  "Arrays & Hashing": [
    {
      question: "Contains Duplicate",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Valid Anagram",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Two Sum",
      status: true,
      url: "20220515-0100",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Group Anagrams",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Top K Frequent Elements",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Product of Array Except Self",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Encode and Decode Strings",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Longest Consecutive Sequence",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  "Two Pointers": [
    {
      question: "Valid Palindrome",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "3Sum",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Container with Most Water",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  "Sliding Window": [
    {
      question: "Best Time to Buy & Sell Stock",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Longest Substring Without Repeating Characters",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Longest Repeating Character Replacement",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Minimum Window Substring",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 2,
    },
  ],
  Stack: [
    {
      question: "Valid Parentheses",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
  ],
  "Binary Search": [
    {
      question: "Search Rotated Sorted Array",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Find Minimum in Rotated Sorted Array",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  "Linked List": [
    {
      question: "Reverse Linked List",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Merge Two Linked Lists",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Reorder List",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Remove Nth Node from End of List",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Linked List Cycle",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Merge K Sorted Lists",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 2,
    },
  ],
  Tree: [
    {
      question: "Invert Binary Tree",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Maximum Depth of Binary Tree",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Same Tree",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Subtree of Another Tree",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Lowest Common Ancestor of a BST",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Binary Tree Level Order Traversal",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Validate Binary Search Tree",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Kth Smallest Element in a BST",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Construct Tree from Preorder and Inorder Traversal",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Binary Tree Max Path Sum",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 2,
    },
    {
      question: "Serialize and Deserialize Binary Tree",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 2,
    },
  ],
  Tries: [
    {
      question: "Implement Trie",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Design Add and Search Word Data Structure",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Word Search II",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 2,
    },
  ],
  "Heap / Priority Queue": [
    {
      question: "Find Median from Data Stream",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 2,
    },
  ],
  Backtracking: [
    {
      question: "Combination Sum",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Word Search",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  Graphs: [
    {
      question: "Number of Islands",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Clone Graph",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Pacific Atlantic Waterflow",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Course Schedule",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Number of Connected Components in Graph",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Graph Valid Tree",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  "Advanced Graphs": [
    {
      question: "Alien Dictionary",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 2,
    },
  ],
  "1-D Dynamic Programming": [
    {
      question: "Climbing Stairs",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "House Robber",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "House Robber II",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Longest Palindromic Substring",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Palindromic Substrings",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Decode Ways",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Coin Change",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Maximum Product Subarray",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Word Break",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Longest Increasing Subsequence",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  "2-D Dynamic Programming": [
    {
      question: "Unique Paths",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Longest Common Subsequence",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  Greedy: [
    {
      question: "Maximum Subarray",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Jump Game",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  Intervals: [
    {
      question: "Insert Interval",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Merge Intervals",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Non-Overlapping Intervals",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Meeting Rooms",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Meeting Rooms II",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  "Math & Geometry": [
    {
      question: "Rotate Image",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Spiral Matrix",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
    {
      question: "Set Matrix Zeroes",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
  "Bit Manipulation": [
    {
      question: "Number of 1 Bits",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Counting Bits",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Reverse Bits",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Missing Number",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 0,
    },
    {
      question: "Sum of Two Integers",
      status: false,
      url: "",
      lcUrl: "",
      schedule: [0],
      difficulty: 1,
    },
  ],
};
